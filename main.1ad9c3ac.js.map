{"version":3,"sources":["scripts/main.js"],"names":["cellValue","tr","index","children","innerText","textContent","salaryCleaner","string","slice","split","join","comparer","asc","a","b","actualCell","nextCell","actualCellCopy","nextCellCopy","includes","localeCompare","document","querySelectorAll","forEach","th","addEventListener","thTable","tbody","closest","querySelector","Array","from","sort","parentNode","indexOf","appendChild","tbodyRows","row","e","target","activeRemove","classList","remove","add","body","insertAdjacentHTML","pushNotification","posTop","posRight","title","description","type","messageBox","createElement","titleBox","descriptionBox","dataset","qa","append","style","top","right","setTimeout","hidden","button","preventDefault","tbodyAdd","nameValue","value","positionValue","selector","officeValue","options","selectedIndex","ageValue","salaryValue","length","parseInt","toLocaleString","input","cellsToEdit","cell","prevContent","cellInput","cellIndex","cellSelect","insertAdjacentElement","focus","key","blur"],"mappings":"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","file":"main.1ad9c3ac.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// ASC/DSC table sorting\n\nconst cellValue = function(tr, index) {\n  return tr.children[index].innerText || tr.children[index].textContent;\n};\n\nconst salaryCleaner = function(string) {\n  return string.slice(1).split(',').join('');\n};\n\ndocument\n  .querySelectorAll('th')\n  .forEach(th => th.addEventListener('click', () => {\n    const thTable = th.closest('table');\n    const tbody = thTable.querySelector('tbody');\n\n    Array.from(tbody.querySelectorAll('tr'))\n      .sort(comparer(Array.from(th.parentNode.children)\n        .indexOf(th), this.asc = !this.asc))\n      .forEach(tr => tbody.appendChild(tr));\n  }));\n\nfunction comparer(index, asc) {\n  return function(a, b) {\n    return (function(actualCell, nextCell) {\n      let actualCellCopy = actualCell;\n      let nextCellCopy = nextCell;\n\n      if (actualCell.includes('$') || nextCell.includes('$')) {\n        actualCellCopy = salaryCleaner(actualCell);\n        nextCellCopy = salaryCleaner(nextCell);\n      }\n\n      return (actualCellCopy - nextCellCopy\n      || actualCellCopy.localeCompare(nextCellCopy));\n    }(cellValue(asc ? a : b, index), cellValue(asc ? b : a, index)));\n  };\n};\n\n// Selected row indicator\n\nconst tbodyRows = document.querySelectorAll('tbody > tr');\n\ntbodyRows.forEach(row => {\n  row.addEventListener('click', e => {\n    if (!e.target.closest('tbody > tr')) {\n      return;\n    }\n\n    tbodyRows.forEach(activeRemove => {\n      activeRemove.classList.remove('active');\n    });\n\n    row.classList.add('active');\n  });\n});\n\n// Adding new employee form\n\nconst body = document.querySelector('body');\n\nbody.insertAdjacentHTML('beforeend',\n  `\n  <form class=\"new-employee-form\">\n    <label>Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\">\n    </label>\n\n    <label>Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\">\n    </label>\n\n    <label>Office:\n      <select name=\"office\" type=\"text\" data-qa=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n\n    <label>Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\">\n    </label>\n\n    <label>Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n    </label>\n\n    <button type=\"submit\" value=\"Submit\">Save to table</button>\n  </form>\n  `);\n\n// Push notification\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const messageBox = document.createElement('div');\n  const titleBox = document.createElement('h2');\n  const descriptionBox = document.createElement('p');\n\n  messageBox.classList.add('notification', type);\n  messageBox.dataset.qa = 'notification';\n  titleBox.classList.add('title');\n  titleBox.textContent = title;\n  descriptionBox.innerText = description;\n\n  messageBox.append(titleBox);\n  messageBox.append(descriptionBox);\n\n  messageBox.style.top = `${posTop}px`;\n  messageBox.style.right = `${posRight}px`;\n  document.body.append(messageBox);\n\n  setTimeout(() => {\n    messageBox.hidden = true;\n  }, 2000);\n};\n\n// Submit button script\n\nconst button = document.querySelector('button');\n\nbutton.addEventListener('click', e => {\n  e.preventDefault();\n\n  const tbodyAdd = document.querySelector('tbody');\n  const nameValue = document.querySelector('input[name=\"name\"]').value;\n  const positionValue = document.querySelector('input[name=\"position\"]').value;\n  const selector = document.querySelector('select[name=\"office\"]');\n  const officeValue = selector.options[selector.selectedIndex].value;\n  const ageValue = document.querySelector('input[name=\"age\"]').value;\n  let salaryValue = document.querySelector('input[name=\"salary\"]').value;\n\n  if (nameValue.length < 4) {\n    pushNotification(10, 10, 'Name is too short!',\n      'Name should contain more then 3 letters...',\n      'error');\n\n    return;\n  }\n\n  if (ageValue < 18 || ageValue > 60) {\n    pushNotification(10, 10, 'Wrong age!',\n      'We hire only 18-60 y.o. employees',\n      'error');\n\n    return;\n  }\n\n  if (!salaryValue.includes('$')) {\n    salaryValue = '$' + parseInt(salaryValue).toLocaleString('en-US');\n  }\n\n  const tr = `\n    <tr>\n      <td>${nameValue}</td>\n      <td>${positionValue}</td>\n      <td>${officeValue}</td>\n      <td>${ageValue}</td>\n      <td>${salaryValue}</td>\n    </tr>\n  `;\n\n  tbodyAdd.insertAdjacentHTML('beforeend', tr);\n\n  pushNotification(10, 10, 'Success!',\n    'Employee is added to the table!',\n    'success');\n\n  const inputs = document.querySelectorAll('input');\n\n  inputs.forEach(input => {\n    input.value = '';\n  });\n});\n\n// Editable cells script\n\nconst cellsToEdit = document.querySelectorAll('tbody tr td');\n\ncellsToEdit.forEach((cell) => {\n  cell.addEventListener('dblclick', e => {\n    const prevContent = cell.textContent;\n    let cellInput = document.createElement('input');\n\n    cellInput.classList.add('cell-input');\n\n    cell.textContent = '';\n    cellInput.value = prevContent;\n    cellInput.type = 'text';\n\n    if (e.target.cellIndex === 2) {\n      const cellSelect = document.createElement('select');\n\n      cellSelect.dataset.qa = 'office';\n\n      cellSelect.insertAdjacentHTML('afterbegin',\n        `<option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>`);\n\n      cellInput = cellSelect;\n      cellInput.value = prevContent;\n    }\n\n    if (e.target.cellIndex === 3) {\n      cellInput.type = 'number';\n    }\n\n    cell.insertAdjacentElement('afterbegin', cellInput);\n\n    cellInput.focus();\n\n    cellInput.addEventListener('blur', () => {\n      if (e.target.cellIndex === 0) {\n        (cellInput.value.length < 4)\n          ? cell.textContent = prevContent\n          : cell.textContent = cellInput.value;\n      }\n\n      if (e.target.cellIndex === 2) {\n        cell.textContent = cellInput.value;\n      }\n\n      if (e.target.cellIndex === 3) {\n        (cellInput.value < 18 || cellInput.value > 60)\n          ? cell.textContent = prevContent\n          : cell.textContent = cellInput.value;\n      }\n\n      cell.textContent = cellInput.value;\n    });\n\n    cellInput.addEventListener('keypress', () => {\n      if (e.key === 'Enter') {\n        cellInput.blur();\n      }\n    });\n  });\n});\n"]}